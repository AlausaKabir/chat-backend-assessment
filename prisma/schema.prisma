// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int          @id @default(autoincrement())
  username  String       @unique
  email     String       @unique
  password  String
  rooms     RoomMember[]
  messages  Message[]
  lastSeen  DateTime?
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
}

model Room {
  id         Int          @id @default(autoincrement())
  name       String
  isPrivate  Boolean      @default(false)
  inviteCode String       @unique
  members    RoomMember[]
  messages   Message[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model RoomMember {
  id       Int      @id @default(autoincrement())
  user     User     @relation(fields: [userId], references: [id])
  userId   Int
  room     Room     @relation(fields: [roomId], references: [id])
  roomId   Int
  joinedAt DateTime @default(now())

  @@unique([userId, roomId])
}

model Message {
  id              Int       @id @default(autoincrement())
  content         String
  sender          User      @relation(fields: [senderId], references: [id])
  senderId        Int
  room            Room      @relation(fields: [roomId], references: [id])
  roomId          Int
  parentMessage   Message?  @relation("MessageReplies", fields: [parentMessageId], references: [id])
  parentMessageId Int?
  replies         Message[] @relation("MessageReplies")
  createdAt       DateTime  @default(now())
}
